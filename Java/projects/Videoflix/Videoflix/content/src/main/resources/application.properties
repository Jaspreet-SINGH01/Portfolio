# spring.application.name=content

# # application.yml
# spring:
#   application:
#     name: content-microservice
#   datasource:
#     url: jdbc:h2:mem:contentdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # H2 pour le dev/tests
#     username: sa
#     password:
#     driver-class-name: org.h2.Driver
#   jpa:
#     hibernate:
#       ddl-auto: update # Ou validate, none en production. 'create-drop' pour les tests.
#     show-sql: true
#     properties:
#       hibernate:
#         format_sql: true
#   # Configuration pour RabbitMQ si le service publie des événements
#   #rabbitmq:
#   #  host: localhost
#   #  port: 5672
#   #  username: guest
#   #  password: guest
#   #  listener:
#   #    simple:
#   #      auto-startup: true

# server:
#   port: 8081 # Port pour le microservice content (assurez-vous qu'il ne chevauche pas les autres)

# logging:
#   level:
#     com.videoflix.content: DEBUG
#     org.springframework.web: INFO
#     org.hibernate.SQL: DEBUG
#     org.hibernate.type.descriptor.sql.BasicBinder: TRACE # Pour voir les paramètres SQL